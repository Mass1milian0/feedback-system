import { Router } from "../router";
export interface JSONRPCRequest {
    jsonrpc: string;
    id?: string;
    method: string;
    params: any[] | Record<string, unknown>;
}
export interface JSONRPCErrorObject {
    code: number;
    message: string;
    data: any;
}
export interface JSONRPCResponse {
    jsonrpc: string;
    id?: string;
    result?: any;
    error?: JSONRPCErrorObject;
}
export default abstract class ServerTransport {
    routers: Router[];
    addRouter(router: Router): void;
    removeRouter(router: Router): void;
    protected routerHandler({ id, method, params }: JSONRPCRequest): Promise<JSONRPCResponse>;
}
