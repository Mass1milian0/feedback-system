"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const router_1 = require("../router");
class ServerTransport {
    constructor() {
        this.routers = [];
    }
    addRouter(router) {
        this.routers.push(router);
    }
    removeRouter(router) {
        this.routers = this.routers.filter((r) => r !== router);
    }
    async routerHandler({ id, method, params }) {
        if (this.routers.length === 0) {
            console.warn("transport method called without a router configured."); // tslint:disable-line
            throw new Error("No router configured");
        }
        const routerForMethod = this.routers.find((r) => r.isMethodImplemented(method));
        let res = {
            id,
            jsonrpc: "2.0",
        };
        if (routerForMethod === undefined) {
            // method not found in any of the routers.
            res = {
                ...res,
                ...router_1.Router.methodNotFoundHandler(method)
            };
        }
        else {
            res = {
                ...res,
                ...await routerForMethod.call(method, params)
            };
        }
        return res;
    }
}
exports.default = ServerTransport;
